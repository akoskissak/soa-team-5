services:
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_RENDERING_SERVER_URL: http://renderer:8091/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - grafana:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - monitoring

  renderer:
    image: grafana/grafana-image-renderer:3.10.5
    environment:
      ENABLE_METRICS: "true"
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:1.34
    ports:
      - "9000:16686"
    networks:
      - monitoring
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
      --log.level=warn
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--log.level=error"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - monitoring
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    command:
      - "--log.level=warn"
    volumes:
      - /run/udev:/run/udev:ro
    ports:
      - "9100:9100"
    networks:
      - monitoring

  fix-permissions:
    image: alpine:latest
    command: ["sh", "-c", "chmod 666 /var/run/docker.sock"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    privileged: true
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
    ports:
      - "9273:9273"
    networks:
      - monitoring

volumes:
  grafana:
    name: grafana

networks:
  monitoring:
    external: true
